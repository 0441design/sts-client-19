{
  "name": "sts-ooi",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.5",
    "@babel/plugin-proposal-class-properties": "^7.4.4",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/preset-env": "^7.4.5",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^8.0.6",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "clean-webpack-plugin": "^1.0.1",
    "css-loader": "^2.1.1",
    "file-loader": "^3.0.1",
    "html-webpack-plugin": "^3.0.4",
    "json-loader": "^0.5.7",
    "mini-css-extract-plugin": "^0.5.0",
    "ncp": "^2.0.0",
    "onchange": "^5.2.0",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "rimraf": "^2.6.3",
    "script-loader": "^0.7.2",
    "style-loader": "^0.23.1",
    "terser-webpack-plugin": "^1.3.0",
    "url-loader": "^1.1.2",
    "webpack": "^4.33.0",
    "webpack-cli": "^3.3.2",
    "webpack-dev-server": "^3.7.0",
    "workbox-webpack-plugin": "^3.6.3"
  },
  "dependencies": {
    "atlaspack": "^1.0.0",
    "ecsy": "^0.2.3",
    "ecsy-three": "^0.1.0",
    "import-http": "^0.3.1",
    "jdenticon": "^2.2.0",
    "localforage": "^1.7.3",
    "lodash": "^4.17.15",
    "mithril": "^2.0.4",
    "pubnub": "^4.23.0",
    "seedrandom": "^3.0.3",
    "three": "^0.115.0",
    "threejs-2d-components": "0.0.4",
    "uuid": "^3.3.2",
    "webrtc-sdk": "^2.2.5",
    "webxr-boilerplate": "^0.2.3",
    "workbox-sw": "^5.1.2",
    "xxhashjs": "^0.2.2"
  },
  "scripts": {
    "watch": "onchange 'src/**/*' 'vendor/**/src/**/*' -- npm run build",
    "start": "webpack-dev-server --open",
    "set-dev": "cp webpack.config.dev.js webpack.config.js",
    "set-prod": "cp webpack.config.prod.js webpack.config.js",
    "mk-img": "mkdir dist/img",
    "cp-man": "cp src/manifest.webmanifest dist/",
    "cp-img": "cp src/img/* dist/img/",
    "worker": "workbox injectManifest workbox-config.js",
    "build": "webpack --config webpack.config.js",
    "postbuild": "npm run worker && npm run cp-man && npm run mk-img && npm run cp-img"
  }
}
